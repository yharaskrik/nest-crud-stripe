import { RequestQueryBuilderOptions, CreateQueryParams } from './interfaces';
import { QueryFields, QueryFilter, QueryJoin, QuerySort } from './types';
export declare class RequestQueryBuilder {
    private static _options;
    private _fields;
    private _filter;
    private _or;
    private _join;
    private _sort;
    private _limit;
    private _offset;
    private _page;
    private _cache;
    queryString: string;
    static setOptions(options: RequestQueryBuilderOptions): void;
    static getOptions(): RequestQueryBuilderOptions;
    static create(params?: CreateQueryParams): RequestQueryBuilder;
    readonly options: RequestQueryBuilderOptions;
    query(): string;
    select(fields: QueryFields): this;
    setFilter(filter: QueryFilter): this;
    setOr(or: QueryFilter): this;
    setJoin(join: QueryJoin): this;
    sortBy(sort: QuerySort): this;
    setLimit(limit: number): this;
    setOffset(offset: number): this;
    setPage(page: number): this;
    resetCache(): this;
    private createFromParams;
    private getParamName;
    private getFields;
    private getCondition;
    private getJoin;
    private getSort;
    private getNumeric;
    private addBrackets;
}
